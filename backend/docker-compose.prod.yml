services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: win-backend-prod-app
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env.prod
    restart: always
    command: >
      sh -c "
        echo 'Waiting for Postgres to be ready...' &&
        sleep 10 &&
        npx prisma migrate deploy &&
        node dist/server.js
      "

  postgres:
    image: postgres:15-alpine
    ports:
      - '${DB_PORT}:${DB_PORT}'
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    restart: always
    env_file:
      - .env.prod
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_prod_data:/data
    restart: always
    env_file:
      - .env.prod
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_prod_data:
  redis_prod_data:
